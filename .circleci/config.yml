version: 2
jobs:
  build:
    docker:
      - image: rgardler/simdem_cli:0.8.1-dev

    steps:
      - checkout
        
      - run:
          name: Hello World test
          command: |
            simdem -p . test
            
  azure:
    docker:
      - image: rgardler/simdem_cli:0.8.1-dev

    steps:
      - checkout

      - run:
          name: Resource Group tests
          command: |
            simdem -p ./incubator/azure_compute/resource_group test

  kubernetes_create:
    docker:
      - image: rgardler/simdem_cli:0.8.1-dev

    steps:
      - checkout

      - run:
          name: Create Kuberenetes Cluster
          no_output_timeout: "30m"
          command: |
            simdem -p ./kubernetes/create_cluster test

  kubernetes_proxy:
    docker:
      - image: rgardler/simdem_cli:0.8.1-dev

    steps:
      - checkout

      - run:
          name: Connect to Kubernetes Cluster
          command: |
            simdem -p ./kubernetes/proxy test

  kubernetes_scale:
    docker:
      - image: rgardler/simdem_cli:0.8.1-dev

    steps:
      - checkout

      - run:
          name: Scale a Kubernetes Cluster
          command: |
            simdem -p ./kubernetes/scale test
	    
  kubernetes_delete:
    docker:
      - image: rgardler/simdem_cli:0.8.1-dev

    steps:
      - checkout

      - run:
          name: Delete Kubernetes Cluster
          no_output_timeout: "30m"
          command: |
            simdem -p ./kubernetes/create_cluster test

  dcos:
    docker:
      - image: rgardler/simdem_cli:0.8.1-dev

    steps:
      - checkout

      - run:
          name: DC/OS tests
          no_output_timeout: "30m"
          command: |
            simdem -p ./dcos test

  aci:
    docker:
      - image: rgardler/simdem_cli:0.8.1-dev

    steps:
      - checkout

      - run:
          name: ACI tests
          command: |
            simdem -p ./incubator/aci test

  vamp_kubernetes:
    docker:
      - image: rgardler/simdem_cli:0.8.1-dev

    steps:
      - checkout

      - run:
          name: Vamp tests
          command: |
            simdem -p ./vamp/kubernetes test

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - azure:
          requires:
            - build
      - kubernetes_create:
          requires:
            - azure
      - kubernetes_proxy:
          requires:
            - kubernetes_create
      - kubernetes_scale:
          requires:
	    -kubernetes_create
      - vamp_kubernetes:
          requires:
            - kubernetes_proxy
      - kubernetes_delete:
          requires:
            - kubernetes_create
	    - kubernetes_proxy
	    - kubernetes_scale
	    - vamp_kubernetes
      - dcos:
          requires:
            - azure
      - aci:
          requires:
            - azure

